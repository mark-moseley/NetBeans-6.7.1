<?xml version="1.0" encoding="UTF-8"?>
<!--
DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.

Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved.


The contents of this file are subject to the terms of either the GNU
General Public License Version 2 only ("GPL") or the Common
Development and Distribution License("CDDL") (collectively, the
"License"). You may not use this file except in compliance with the
License. You can obtain a copy of the License at
http://www.netbeans.org/cddl-gplv2.html
or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
specific language governing permissions and limitations under the
License.  When distributing the software, include this License Header
Notice in each file and include the License file at
nbbuild/licenses/CDDL-GPL-2-CP.  Sun designates this
particular file as subject to the "Classpath" exception as provided
by Sun in the GPL Version 2 section of the License file that
accompanied this code. If applicable, add the following below the
License Header, with the fields enclosed by brackets [] replaced by
your own identifying information:
"Portions Copyrighted [year] [name of copyright owner]"

Contributor(s):

The Original Software is NetBeans. The Initial Developer of the Original
Software is Sun Microsystems, Inc. Portions Copyright 1997-2007 Sun
Microsystems, Inc. All Rights Reserved.

If you wish your version of this file to be governed by only the CDDL
or only the GPL Version 2, indicate your decision by adding
"[Contributor] elects to include this software in this distribution
under the [CDDL or GPL Version 2] license." If you do not indicate a
single choice of license, a recipient has the option to distribute
your version of this file under either the CDDL, the GPL Version 2 or
to extend the choice of license to its licensees as provided above.
However, if you add GPL Version 2 code and therefore, elected the GPL
Version 2 license, then the option applies only if the new code is
made subject to such option by the copyright holder.
-->

<?xml-stylesheet href="../nbbuild/javadoctools/apichanges.xsl" type="text/xsl"?>
<!DOCTYPE apichanges PUBLIC "-//NetBeans//DTD API changes list 1.0//EN" "../nbbuild/javadoctools/apichanges.dtd">

<!-- INFO FOR PEOPLE ADDING CHANGES:
[most of contents snipped - see openide's apichanges for how-to instructions]
<change>
    <api name="compiler"/>
    <summary>Some brief description here, can use <b>XHTML</b></summary>
    <version major="1" minor="99"/>
    <date day="13" month="6" year="2001"/>
    <author login="jrhacker"/>
    <compatibility addition="yes"/>
    <description>
        The main description of the change here.
        Again can use full <b>XHTML</b> as needed.
    </description>
    <class package="org.openide.compiler" name="DoWhatIWantCompiler"/>
    <issue number="14309"/>
</change>
-->

<apichanges>

<!-- First, a list of API names you may use: -->
<apidefs>
        <apidef name="DebuggerCoreSPI">Debugger Core SPI</apidef>
</apidefs>

<!-- ACTUAL CHANGES BEGIN HERE: -->

<changes>
    <change id="annotation-to-breakpoint">
        <api name="DebuggerCoreSPI"/>
        <summary><code>BreakpointAnnotation</code> class added.</summary>
        <version major="2" minor="11"/>
        <date day="27" month="3" year="2008"/>
        <author login="mentlicher"/>
        <compatibility binary="compatible" source="compatible" modification="yes" semantic="compatible"/>
        <description>
            <p>
                <code>BreakpointAnnotation</code> class added, in order to bind annotations to breakpoints.
                BreakpointEnableAction and BreakpointCustomizeAction are also moved to spi.debugger.ui module
                so thatthey do not have to be duplicated in every debugger module. It's enough to implement
                the new BreakpointAnnotation class and these action will automatically retrieve the breakpoint.
            </p>
        </description>
        <class package="org.netbeans.spi.debugger.ui" name="BreakpointAnnotation"/>
        <issue number="127758"/>
    </change>

    <change id="context-events-dispatch">
        <api name="DebuggerCoreSPI"/>
        <summary><code>EditorContextDispatcher</code> class added.</summary>
        <version major="2" minor="13"/>
        <date day="18" month="6" year="2008"/>
        <author login="mentlicher"/>
        <compatibility binary="compatible" source="compatible" modification="yes" semantic="compatible"/>
        <description>
            <p>
                <code>EditorContextDispatcher</code> class added, in order to simplify the access to current
                active elements in the IDE (like current FileObject and editor pane) and
                to make the events dispatching more efficient - reduce the number of listeners on context switching.
                <code>EditorContextDispatcher</code> allows registration of listeners based on files MIME type, therefore
               listeners obtain change events only when context change concerns a file of the given MIME type.
            </p>
        </description>
        <class package="org.netbeans.spi.debugger.ui" name="EditorContextDispatcher"/>
        <issue number="137005"/>
    </change>

    <change id="controller">
        <api name="DebuggerCoreSPI"/>
        <summary><code>AttachType.getController()</code> and
                 <code>BreakpointType.getController()</code> methods added.</summary>
        <version major="2" minor="14"/>
        <date day="17" month="9" year="2008"/>
        <author login="mentlicher"/>
        <compatibility binary="compatible" source="compatible" modification="yes" semantic="compatible"/>
        <description>
            <p>
                <code>AttachType.getController()</code> and <code>BreakpointType.getController()</code>
                methods added, because of the clash of Controller.isValid() and
		javax.swing.JComponent.isValid() methods.
                This cause problems when using false validity in some cases,
                therefore a separate implementation of <code>Controller</code> interface is necessary.
            </p>
        </description>
        <issue number="138717"/>
    </change>


</changes>

  <!-- Now the surrounding HTML text and document structure: -->

  <htmlcontents>
<!--

                            NO NO NO NO NO!

         ==============>    DO NOT EDIT ME!  <======================

          AUTOMATICALLY GENERATED FROM APICHANGES.XML, DO NOT EDIT

                SEE xml/api/doc/changes/apichanges.xml

-->
    <head>
      <title>Debugger Core API changes by date</title>
      <link rel="stylesheet" href="prose.css" type="text/css"/>
    </head>
    <body>

<p class="overviewlink"><a href="overview-summary.html">Overview</a></p>

<h1>Introduction</h1>

<p>This document lists changes made to the Debugger Core APIs. Please ask on the 
    <code>nbdev@netbeans.org</code>
    mailing list if you have any questions about the details of a
    change, or are wondering how to convert existing code to be compatible.
</p>

      <hr/><standard-changelists module-code-name="org.netbeans.api.debugger/1"/>

      <hr/><p>@FOOTER@</p>

    </body>
  </htmlcontents>
</apichanges>
